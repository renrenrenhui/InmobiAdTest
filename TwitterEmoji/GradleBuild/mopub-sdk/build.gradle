// This buildscript will assemble the MoPub SDK into an AAR.

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.2"
}

repositories {
    mavenCentral()
    jcenter()
    flatDir {
         dirs '../libs'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}

group = 'com.mopub'
description = '''MoPub Android SDK'''
version = '3.11.0'

android {
    compileSdkVersion 21
    buildToolsVersion '21.1.2'

    defaultConfig {
        versionCode 28
        versionName version
        minSdkVersion 9
        targetSdkVersion 21
        consumerProguardFiles 'proguard.txt'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main']
            renderscript.srcDirs = ['src/main']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard.txt')
        }
      
        debug {
            minifyEnabled false
        }
    }

    // Note: You will also need a local.properties file to set the location of the SDK in the same 
    // way that the existing SDK requires, using the sdk.dir property.
    // Alternatively, you can set an environment variable called ANDROID_HOME. There is no 
    // difference between the two methods, you can use the one you prefer.

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:22.0.0'
    compile 'com.android.support:support-annotations:22.0.0'
    compile 'com.android.support:recyclerview-v7:22.0.0'
    compile 'com.mopub.volley:mopub-volley:1.1.0'
    compile 'com.google.android.gms:play-services-ads:8.4.0'
    compile 'com.google.android.gms:play-services-analytics:8.4.0'
    // anchor: additional dependencies
    compile 'net.pubnative:library:1.4.8'
}

// Don't run the Robolectric Unit Tests. They don't build properly in Gradle or Android Studio in this version.
check.dependsOn.remove("test")
check.dependsOn.remove("testDebug")

def siteUrl = 'https://github.com/mopub/mopub-android-sdk'
def gitUrl = 'https://github.com/mopub/mopub-android-sdk.git'
// Put your credentials (bintray.user, bintray.apikey) in ~/.gradle/gradle.properties
bintray {
    user = project.hasProperty("bintray.user") ? project.getProperty("bintray.user") : ""
    key = project.hasProperty("bintray.apikey") ? project.getProperty("bintray.apikey") : ""

    configurations = ['archives']
    publish = true

    pkg {
        repo = 'mopub-android-sdk'
        name = 'mopub-android-sdk'

        userOrg = 'mopub'
        desc = description

        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']

        version {
            name = project.version
        }
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'

                name 'MoPub Android SDK'
                url siteUrl

                licenses {
                    license {
                        name 'MoPub SDK License'
                        url 'http://www.mopub.com/legal/sdk-license-agreement/'
                    }
                }
                developers {
                    // ID corresponds to GitHub user name
                    developer {
                        id 'nathanshayefar'
                        name 'Nathan Shayefar'
                        email 'nshayefar@twitter.com'
                    }
                    developer {
                        id 'joeblubaugh'
                        name 'Joe Blubaugh'
                        email 'joeblubaugh@twitter.com'
                    }
                    developer {
                        id 'steffanc'
                        name 'Steffan Chartrand'
                        email 'schartrand@twitter.com'
                    }
                    developer {
                        id 'aornelas'
                        name 'Andr√©s Ornelas'
                        email 'andres@twitter.com'
                    }
                    developer {
                        id 'bichenwang'
                        name 'Bichen Wang'
                        email 'bwang@twitter.com'
                    }
                    developer {
                        id 'nathank33'
                        name 'Nathan Braun'
                        email 'nbraun@twitter.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
